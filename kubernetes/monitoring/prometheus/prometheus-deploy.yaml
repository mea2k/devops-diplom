---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values: ["prometheus"]
            topologyKey: "kubernetes.io/hostname"

      # initContainers:
      # - name: chown-fix
      #   image: busybox:1.35
      #   command: ["sh", "-c", "chown -R 65534:65534 /prometheus"]
      #   volumeMounts:
      #   - name: storage-volume
      #     mountPath: /prometheus
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 3000
      
      containers:
      - name: prometheus
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
        
        image: prom/prometheus:latest #v2.47.0
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--web.console.libraries=/etc/prometheus/console_libraries"
        - "--web.console.templates=/etc/prometheus/consoles"
        - "--storage.tsdb.retention.time=7d"
        - "--web.listen-address=:9090"  # Явное указание адреса и порта
        - "--web.enable-lifecycle"      # Опционально: для удалённого управления
        - "--enable-feature=remote-write-receiver"

        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name

        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          # fsGroup: 65534
          # runAsUser: 1000
          # runAsGroup: 3000
          # fsGroup: 2000
          # fsGroupChangePolicy: "OnRootMismatch" 
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 200Mi
        ports:
        - containerPort: 9090
          name: http
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: storage-volume
          mountPath: /prometheus
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      - name: storage-volume
        persistentVolumeClaim:
          claimName: prometheus-pvc

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  type: NodePort
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 31090
  selector:
    app: prometheus
